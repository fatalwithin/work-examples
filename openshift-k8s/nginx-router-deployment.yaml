kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    deployment.kubernetes.io/revision: '4'
  selfLink: /apis/apps/v1/namespaces/openshift-ingress/deployments/router-nginx
  name: router-nginx
  namespace: openshift-ingress
  labels:
    ingresscontroller.operator.openshift.io/owning-ingresscontroller: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      ingresscontroller.operator.openshift.io/deployment-ingresscontroller: nginx
  template:
    metadata:
      creationTimestamp: null
      labels:
        ingresscontroller.operator.openshift.io/deployment-ingresscontroller: nginx
    spec:
      nodeSelector:
        type: nginx-router
      restartPolicy: Always
      serviceAccountName: router
      schedulerName: default-scheduler
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: >-
                      ingresscontroller.operator.openshift.io/deployment-ingresscontroller
                    operator: In
                    values:
                      - default
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            requests:
              cpu: 100m
              memory: 256Mi
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 1936
              host: localhost
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: router
          livenessProbe:
            httpGet:
              path: /healthz
              port: 1936
              host: localhost
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: STATS_PORT
              value: '1936'
            - name: ROUTER_SERVICE_NAMESPACE
              value: openshift-ingress
            - name: DEFAULT_CERTIFICATE_DIR
              value: /etc/pki/tls/private
            - name: ROUTER_SERVICE_NAME
              value: nginx
            - name: STATS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: router-stats-default
                  key: statsUsername
            - name: STATS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: router-stats-default
                  key: statsPassword
            - name: ROUTER_METRICS_TYPE
            - name: ROUTER_METRICS_TLS_CERT_FILE
              value: /etc/pki/tls/metrics-certs/tls.crt
            - name: ROUTER_METRICS_TLS_KEY_FILE
              value: /etc/pki/tls/metrics-certs/tls.key
            - name: ROUTER_CANONICAL_HOSTNAME
              value: np.dev-gen.sigma.sbrf.ru
            - name: ROUTE_LABELS
              value: router=np
          ports:
            - name: http
              hostPort: 80
              containerPort: 80
              protocol: TCP
            - name: https
              hostPort: 443
              containerPort: 443
              protocol: TCP
            - name: metrics
              hostPort: 1936
              containerPort: 1936
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: default-certificate
              readOnly: true
              mountPath: /etc/pki/tls/private
            - name: metrics-certs
              readOnly: true
              mountPath: /etc/pki/tls/metrics-certs
          terminationMessagePolicy: FallbackToLogsOnError
          image: >-
            registry.sigma.sbrf.ru/dev/ci01563053/ocp4_dev/openshift4/tools/nginx-openshift-router:0.5.3
      serviceAccount: router
      volumes:
        - name: default-certificate
          secret:
            secretName: ingress-certificate-sber
            defaultMode: 420
        - name: metrics-certs
          secret:
            secretName: router-metrics-certs-default
            defaultMode: 420
      dnsPolicy: ClusterFirst
      priorityClassName: system-cluster-critical
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 0
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
