apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: null
  name: custom-project-request
objects:
- apiVersion: project.openshift.io/v1
  kind: Project
  metadata:
    annotations:
      openshift.io/description: ${PROJECT_DESCRIPTION}
      openshift.io/display-name: ${PROJECT_DISPLAYNAME}
      openshift.io/requester: ${PROJECT_REQUESTING_USER}
    creationTimestamp: null
    name: ${PROJECT_NAME}
  spec: {}
  status: {}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: admin
    namespace: ${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: ${PROJECT_ADMIN_USER}
- apiVersion: rbac.authorization.k8s.io/v1beta1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: admin-as
    namespace: ${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin-as
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: ${PROJECT_ADMIN_USER}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: project-delete
    namespace: ${PROJECT_NAME}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: project-delete
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: ${PROJECT_ADMIN_USER}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: jenkins
    namespace: ${PROJECT_NAME}
  secrets:
  - name: jenkins-token
- apiVersion: authorization.openshift.io/v1
  kind: RoleBinding
  metadata:
    name: jenkins-cd
    namespace: ${PROJECT_NAME}
  roleRef:
    name: jenkins-cd
  subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: ${PROJECT_NAME}
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: jenkins
    name: jenkins-token
    namespace: ${PROJECT_NAME}
  type: kubernetes.io/service-account-token
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: deny-by-default
  spec:
    podSelector:
    ingress: []
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-openshift-ingress
  spec:
    ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            network.openshift.io/policy-group: ingress
    podSelector: {}
    policyTypes:
    - Ingress
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-same-namespace
  spec:
    podSelector:
    ingress:
    - from:
      - podSelector: {}
- apiVersion: v1
  kind: LimitRange
  metadata:
    name: cpu-ram-default-limits
  spec:
    limits:
    - default:
        cpu: 200m
        memory: 100Mi
      defaultRequest:
        cpu: 100m
        memory: 50Mi
      maxLimitRequestRatio:
        cpu: "16"
        memory: "2"
      type: Container
    - max:
        cpu: "4"
        memory: 8Gi
      type: Pod
- apiVersion: v1
  kind: ResourceQuota
  metadata:
    name: core-object-counts
  spec:
    hard:
      limits.cpu: "1"
      limits.memory: 1Gi
      persistentvolumeclaims: "0"
      requests.cpu: "1"
      requests.memory: 1Gi
parameters:
- name: PROJECT_NAME
- name: PROJECT_DISPLAYNAME
- name: PROJECT_DESCRIPTION
- name: PROJECT_ADMIN_USER
- name: PROJECT_REQUESTING_USER

